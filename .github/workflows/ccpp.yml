name: C/C++ CI

on: [push, pull_request]
env:
   TRAVIS: true
   CAS: true

jobs:
  unit_and_style:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: check style
      run:  make compliant && make shellcheck && make docs-coverage

    - name: check install
      run:  sudo make install && make install-check

    - name: run unit tests
      run:  make check

    - name: run distcheck
      run:  make distcheck

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_1:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=1
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_2:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=2
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_3:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=3
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_4:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=4
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_5:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=5
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_6:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=6
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_7:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=7
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_8:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=8
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING:$JOB_TESTS_TOTAL}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  functional_test_9:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            JOB_NUMBER=9
            NUMBER_OF_JOBS=9
            TESTS_TOTAL="$(find test/functional -name *.bats | wc -l)"
            JOB_TESTS_TOTAL="$(( $TESTS_TOTAL/$NUMBER_OF_JOBS ))"
            ALL_TESTS=($(find test/functional -name *.bats | sort -R | tr '\n' ' '))
            BEGINNING=$(( "$JOB_TESTS_TOTAL" * ("$JOB_NUMBER" - 1) ))
            JOB_TESTS=${ALL_TESTS[@]:$BEGINNING}
            env TESTS="$JOB_TESTS" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log
